/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-06-28 01:41:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.DecimalFormat;
import com.tjoeun.onLinePoll.PollRead;
import java.util.ArrayList;

public final class pollResult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.DecimalFormat");
    _jspx_imports_classes.add("com.tjoeun.onLinePoll.PollRead");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>투표 결과 보기</title>\r\n");
      out.write("<link rel=\"icon\" href=\"./logo.png\">\r\n");
      out.write("\r\n");
      out.write("<!-- 일정 시간이 경과되면 특정 웹 사이트로 이동하기 -->\r\n");
      out.write("<!--<meta http-equiv=\"refresh\" content=\"5; url='https://www.naver.com'\"> -->\r\n");
      out.write("\r\n");
      out.write("<!-- 일정 시간이 경과되면 현재 페이지를 다시 호출한다. => 새로고침 한다. -->\r\n");
      out.write("<meta http-equiv=\"refresh\" content=\"1; url='?'\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- 텍스트 파일에 저장된 투표 결과를 읽어와 브라우저에 표시한다. -->\r\n");

// 텍스트 파일을 읽어서 투표 항목의 개수를 계산한다. import시 끝에 커서 놓고 ctrl + space바
	String filepath = application.getRealPath("/")+"poll.txt";
	ArrayList<String> poll = PollRead.pollRead(filepath);
	int itemCount = (poll.size()-1)/2;

// 득표율을 계산하기 위해서 전체 투표수를 계산한다.
	int sum = 0;
	for (int i= itemCount+1; i< poll.size();i++)
	{
		sum += Integer.parseInt(poll.get(i));
	}
	// out.println(sum);
	
// 숫자 데이터 서식을 지정한다.
	DecimalFormat df1 = new DecimalFormat("#,##0표"); // 득표수 서식
	DecimalFormat df2 = new DecimalFormat("0.00%"); // 득표율 서식

      out.write("\r\n");
      out.write("\r\n");
      out.write("<table border=\"1\" width=\"500\" align=\"center\" cellspacing=\"0\" cellpadding=\"5\">\r\n");
      out.write("	<tr> \r\n");
      out.write("		<th colspan=\"2\"> \r\n");
      out.write("			");
      out.print(poll.get(0));
      out.write("\r\n");
      out.write("		</th>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr> \r\n");
      out.write("		<td align=\"right\" colspan=\"2\"> \r\n");
      out.write("			총 투표수: ");
      out.print(df1.format(sum));
      out.write("\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");

	for(int i =1; i<=itemCount; i++)
	{
		int pyo = Integer.parseInt(poll.get(itemCount + i)); // 득표수
		double per = (double)pyo / sum; // 득표율

      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td width=\"100\"> \r\n");
      out.write("			");
      out.print(poll.get(i));
      out.write('(');
      out.print(df1.format(pyo));
      out.write(") <!-- 득표수 서식 지정 -->\r\n");
      out.write("			<!--");
      out.print(poll.get(i));
      out.write('(');
      out.print(df2.format(per));
      out.write(")--> <!-- 득표율 서식 지정 -->\r\n");
      out.write("		</td>\r\n");
      out.write("		<td width=\"400\"> \r\n");
      out.write("			<hr size=\"10\" color=\"#4AA1E8\" width=\"");
      out.print( 400 * per );
      out.write("\" align=\"left\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");

	}

      out.write("\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td align=\"center\" colspan=\"2\"> \r\n");
      out.write("				<input type=\"button\" value=\"투표하기로 가기\" onclick=\"location.href='pollRead.jsp'\">\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-07-02 23:52:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/./loginTest.jsp", Long.valueOf(1685926065835L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>로그인 페이지 삽입</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- include 디렉티브를 사용해서 중복되는 jsp 코드 삽입하기, 앞으로 안 쓸듯 -->\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>로그인/로그아웃</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
 
	// post 방식으로 전송되는 한글 깨짐 방지
	request.setCharacterEncoding("UTF-8");
	
	// 로그인 버튼이 클릭되면 넘어오는 데이터(id, password)를 받는다.
	// request.getParameter(): 이전 페이지에서 name 속성에 담겨서 넘어오는 데이터를 받는다.
	// 넘어오는 데이터가 없으면 null 이다.
	String id = "";
	String password = "";
	try{
		id = request.getParameter("id").trim();
		password = request.getParameter("password").trim();
	}catch (NullPointerException e){
		// catch 블록을 비워두면 예외를 무시한다.
	}
	// out.println("id: "+id+", password: "+password+"<br/>");
	
	// id가 "hong"이고 password가 "123456"이면 로그인 처리한다.
	if((id + password).length() != 0){
		
		out.println("<script>");
		if (id.equals("hong") && password.equals("123456")){
			// 로그인 처리 => 로그인 정보를 세션에 저장한다.
			session.setAttribute("id", id);
			session.setAttribute("name", "관리자");
			session.setAttribute("login", "yes");
			out.println("alert('"+session.getAttribute("name")+"님 어서오세요.')");
		}else{
			// 로그인 에러 처리
			out.println("alert('아이디 또는 비밀번호가 올바르지 않습니다.')");
		}
		out.println("</script>");
	}
	
// 로그아웃 버튼이 클릭되면 넘어오는 데이터(logout)를 받는다.
	String logout = request.getParameter("logout");
	
// 로그아웃 정보가 넘어왔으면 로그아웃 처리를 한다.
	if (logout != null && logout.equals("yes")){
		out.println("<script>");
		out.println("alert('"+session.getAttribute("name")+"님 안녕히가세요.')");
		out.println("</script>");
		// 로그아웃 되었으므로 세션에서 로그인 정보를 제거한다.
		session.removeAttribute("id");
		session.removeAttribute("name");
		session.removeAttribute("login");
	}
	
	
// 세션에서 로그인 정보를 읽어와서 로그인 상태, 로그아웃 상태의 화면을 브라우저에 출력한다.	
	String login = (String) session.getAttribute("login");
	if (login != null && login.equals("yes")){

      out.write("\r\n");
      out.write("		<!-- 로그인 상태일 경우 브라우저에 표시될 내용 -->\r\n");
      out.write("		<h2>로그인 성공</h2>\r\n");
      out.write("		");
      out.print(session.getAttribute("id"));
      out.write("님 안녕하세요1<br/><!-- jsp 표현식 -->\r\n");
      out.write("		");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님 안녕하세요2<br/><!-- EL -->\r\n");
      out.write("		<input type=\"button\" value=\"로그아웃\" onclick=\"location.href='?logout=yes'\"/>\r\n");
      out.write("		\r\n");
 		
	} else {

      out.write("\r\n");
      out.write("		<!-- 로그아웃 상태일 경우 브라우저에 표시될 내용 -->\r\n");
      out.write("		<form action=\"?\" method=\"post\"> <!-- action 페이지로 post 방식으로 전송되는 한글은 깨짐 방지를 해야한다. -->\r\n");
      out.write("			<table width=\"300px\" border=\"1\" cellpadding=\"5\" cellspacing=\"0\">\r\n");
      out.write("				<!--  \r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<label>\r\n");
      out.write("						아이디<input type=\"text\" name=\"id\"/>\r\n");
      out.write("						</label>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				-->\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th><label for=\"id\">아이디</label></th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input id=\"id\" type=\"text\" name=\"id\"/>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th><label for=\"password\">비밀번호</label></th>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input id=\"password\" type=\"password\" name=\"password\"/>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\" align=\"center\">\r\n");
      out.write("						<input type=\"submit\" value=\"로그인\"/>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
		
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<hr/>\r\n");
      out.write("\r\n");
      out.write("<!-- include 액션 태그를 이용해서 중복되는 jsp 코드 삽입하기, 권장한다. -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./loginTest.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
